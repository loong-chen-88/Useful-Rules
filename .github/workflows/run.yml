name: Generate shadowrocket rules

on:
  workflow_dispatch:
  schedule:
    - cron: '59 23 * * SUN'
  push:
    branches:
      - main

jobs:
  Building_The_Rules_List_File:
    runs-on: ubuntu-latest
    steps:
      - name: Generate geosite_geolocation-!cn.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/geolocation-!cn.list \
          | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' > geosite_geolocation-!cn.list
      - name: Generate geosite_category-ads-all.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.list \
          | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' > geosite_category-ads-all.list  
      - name: Generate geosite_gfw.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.list \
          | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' > geosite_gfw.list
      - name: Generate geosite_private.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.list \
          | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' > geosite_private.list
      - name: Generate geosite_cn.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.list \
          | sed -E 's/^\+\./DOMAIN-SUFFIX,/; s/^[^D]/DOMAIN-SUFFIX,&/' > geosite_cn.list
      - name: Generate geoip_telegram.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.list | sed 's/^/IP-CIDR,/' > geoip_telegram.list
      - name: Generate geoip_private.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.list | sed 's/^/IP-CIDR,/' > geoip_private.list
      - name: Generate geoip_cn.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.list | sed 's/^/IP-CIDR,/' > geoip_cn.list         
      - name: Move files to rules directory
        run: |
          mkdir -p rules.d
          cp *.list ./rules.d/
      - name: Upload rule list artifact
        uses: actions/upload-artifact@v4
        with:
          name: rules
          path: ./rules.d/
          
  Building_Shadowrocket_Configuration_Files:
    runs-on: ubuntu-latest
    steps:
      - name: Creating Folders
        run: |
          mkdir -p conf.d
          
      - name: Getting the generic configuration file
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: 'Custom'
          token: ${{ secrets.ACCESS_TOKEN }}
          sparse-checkout: |
            General.txt
          sparse-checkout-cone-mode: false
          path: conf.d

      - name: Generate skip proxy entries Generate Always Use Real IP Entries
        run: |
          sed -i "/^skip-proxy =/c\skip-proxy = $(curl -sSL \
          https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/private.list | \
          paste -sd,),$(curl -sSL \
          https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/private.list | \
          sed 's/+/\*/g' | paste -sd,)" ./conf.d/General.txt

      - name: Generate Always Use Real IP Entries
        run: |
          sed -i "/^always-real-ip =/c\always-real-ip = $(curl -sSL \
          https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/geolocation-cn.list | \
          sed 's/+/\*/g' | paste -sd,)" ./conf.d/General.txt

      - name: Generation of rules section
        run: |
          cat <<EOF >> ./conf.d/General.txt
          [Rule]
          DOMAIN,8.8.8.8.in-addr.arpa,AUTO
          DOMAIN,5.5.5.223.in-addr.arpa,DIRECT
          RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geosite_category-ads-all.list,REJECT
          RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geosite_gfw.list,AUTO
          RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geosite_cn.list,DIRECT
          AND,((RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geosite_geolocation-!cn.list),(RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geoip_cn.list,)),DIRECT
          IP-CIDR,8.8.8.8/32,AUTO,no-resolve
          IP-CIDR,223.5.5.5/32,DIRECT,no-resolve
          RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geoip_telegram.list,AUTO,no-resolve
          RULE-SET,https://raw.githubusercontent.com/loong-chen-88/Useful-Rules/refs/heads/release/rules/geoip_cn.list,DIRECT,no-resolve
          FINAL,AUTO
          
          EOF

      - name: Generate URL rewrite configuration file
        run: |
          curl -sSL https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Shadowrocket/TiKTok-US.conf | sed -n '/\[URL Rewrite\]/,$p' > URL_Rewrite.txt
          sed -i '/\[MITM\]/,$d' URL_Rewrite.txt
          sed -i '/\[URL Rewrite\]/a\^https?://(www.)?g.cn https://www.google.com 302\n^https?://(www.)?google.cn https://www.google.com 302' URL_Rewrite.txt
          cp URL_Rewrite.txt ./conf.d

      - name: Generate HTTPS decrypted configuration file
        run: |
          curl -sSL https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Shadowrocket/TiKTok-US.conf | sed -n '/\[MITM\]/,$p' > MITM.txt
          sed -i 's/hostname = /hostname = *snssdk.com,*amemv.com,*instagram.com,/' MITM.txt
          cp MITM.txt ./conf.d

      - name: Concatenate All configuration file
        run: |
          cat ./conf.d/*.txt > ./conf.d/Shadowrocket.conf
          sed -i "1s/^/# Built on $(TZ="Asia/Shanghai" date)\n/" ./conf.d/Shadowrocket.conf

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: conf
          path: ./conf.d/Shadowrocket.conf
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: [Building_The_Rules_List_File,Building_Shadowrocket_Configuration_Files]
    steps:     
      - name: Configure variable names
        run: |
          echo "RELEASE_NAME=Built on $(TZ="Asia/Shanghai" date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(TZ="Asia/Shanghai" date +%Y%m%d%H%M)" >> $GITHUB_ENV
          mkdir -p rules

      - name: Download artifact 
        uses: actions/download-artifact@v4
        with:
          path: ./rules

      - name: Publish and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./rules/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Upload artifact to "release" branch
        run: |
          cd rules || exit 1
          git init
          git config --local user.name ${{ secrets.USER_NAME }}
          git config --local user.email ${{ secrets.USER_EMAIL }}
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release
          # git push --delete origin $( git ls-remote --tags origin | awk '{print $2}' | grep -vE "$(echo -e ${TAG_NAME})")
          
      - name: Purge jsdelivr CDN
        run: |
          cd rules || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

  Delete_Historical_Data:
    runs-on: ubuntu-latest
    needs: publish
    steps:
        - name: Delete old artifacts
          uses: geekyeggo/delete-artifact@v5
          with:
            name: |
                rules
                conf

        - name: Delete old tags and releases
          uses: dev-drprasad/delete-older-releases@v0.3.4
          with:
            keep_latest: 3
            delete_expired_data: 7
            delete_tags: true
          env:
              GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

        - name: Delete old workflow runs
          uses: Mattraks/delete-workflow-runs@v2
          with:
            token: ${{ secrets.ACCESS_TOKEN }}
            repository: ${{ github.repository }}
            retain_days: 7
            keep_minimum_runs: 3
          
    
